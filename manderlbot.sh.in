#!/bin/bash

#
# This script allows to launch manderlbot and control it while running
#

# $Id$

INSTALL_DIR=@prefix@/lib/erlang/
ERL=@ERL@
VERSION=@PACKAGE_VERSION@

BOOT_SCRIPT="$INSTALL_DIR/lib/manderlbot-$VERSION/priv/manderlbot"
RUN_OPTIONS="-detached -setcookie mdb"
MANDERLBOTPATH=$INSTALL_DIR/lib/manderlbot-$VERSION/ebin

usage() {
    prog=`basename $1`
    echo "$prog start|stop|restart|status"
}

start() {
    echo "erl -sname manderlbot $RUN_OPTIONS -boot $BOOT_SCRIPT $CONF_OPT $LOG_OPT \
	    $LOG_LEVEL_OPT"
    $ERL -sname manderlbot -pa $MANDERLBOTPATH $RUN_OPTIONS -boot $BOOT_SCRIPT $CONF_OPT $LOG_OPT \
	    $LOG_LEVEL_OPT -boot_var MANDERLBOTPATH  $INSTALL_DIR
}

stop() {
    $ERL -sname control $RUN_OPTIONS -s mdb_control stop  \
         -boot_var MANDERLBOTPATH  $INSTALL_DIR
}

status() {
    pid=`ps -edaf | awk '/-[s]name manderlbot/ {print $2}'`

    if [ "zz$pid" != "zz" ]; then
	$ERL -sname control $RUN_OPTIONS -s mdb_control status  \
         -boot_var MANDERLBOTPATH  $INSTALL_DIR
	echo $LOG_OPT
	echo $CONF_OPT
    else
	echo "manderlbot is not running"
	echo $LOG_OPT
	echo $CONF_OPT
    fi
}

while getopts ":c:l:f:" Option
do
    case $Option in
        c) CONF_OPT="-manderlbot config_file \"$OPTARG\" ";;
        f) LOG_OPT="-manderlbot log_file \"$OPTARG\" ";;
        l) LOG_LEVEL_OPT="-manderlbot log_level '$OPTARG' ";;
		*) usage ;;
    esac
done	
shift $(($OPTIND - 1))	
case $1 in
    start) start;;

    stop)  stop;;

    status) status;;

    restart) stop && start;;

    *) usage $0
esac
